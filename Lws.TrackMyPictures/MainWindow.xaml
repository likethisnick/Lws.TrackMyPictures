<Window
    Name="myWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:WindowsPresentation="clr-namespace:Demo.WindowsPresentation"
    xmlns:src="clr-namespace:Lws.TrackMyPictures"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="Lws.TrackMyPictures.MainWindow"
    Title="VS.Net Style Demo"
    Height="481.833"
    Width="777.65"
    MinHeight="160"
    MinWidth="260"
    AllowDrop="True"
    Icon="/mainicon.ico"
    >

    <Window.Resources>
        <Storyboard x:Key="sbShowLeftMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="-172,48,0,0" To="0,48,0,0" DecelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="sbHideLeftMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,48,0,0" To="-172,48,0,0" AccelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="LblRight" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="220,0,0,0" To="48,0,0,0" AccelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="LblLeft" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="48,0,0,0" To="220,0,0,0" DecelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="sbShowInfo" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="-260,48,0,0" To="0,48,0,0" DecelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="sbHideInfo">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,48,0,0" To="-260,48,0,0" AccelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>



    </Window.Resources>

    <Window.Style>
        <StaticResource ResourceKey="TMPStyle"/>
    </Window.Style>





    <Grid x:Name="WindowGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Rectangle Fill="#FF171717" Height="48" VerticalAlignment="Top"/>

        <Grid Background="Transparent" Name="MapGrid" Visibility="Collapsed">
            <Grid HorizontalAlignment="Right" Height="80" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="40" Panel.ZIndex="10">

                <Button x:Name="btnZoomIn" Content="Button" Margin="0,0,0,40"
                    Width="40" Height="40" VerticalAlignment="Bottom" HorizontalAlignment="Left" Click="btnZoomIn_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="Styles/zoom_in.png"/>
                    </Button.Background>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>


                <Button x:Name="btnZoomOut" Content="Button" Width="40" 
                    Height="40" VerticalAlignment="Bottom" HorizontalAlignment="Right" Click="btnZoomOut_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="Styles/zoom_out.png"/>
                    </Button.Background>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <!-- MAP CONTROL -->
            <WindowsPresentation:Map x:Name="MainMap"
                                 Margin="48,48,0,0" HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     
                                     MouseEnter="MainMap_MouseEnter"
                                     DragDrop.Drop="myWindow_Drop"
                                     />

            <Rectangle Fill="#FF171717" HorizontalAlignment="Left" 
                       Margin="0,48,0,0" Width="48" MouseEnter="btnLeftMenuShow_Click"    />

            <StackPanel 
                Panel.ZIndex="1"
				x:Name="pnlLeftMenu" 
				Orientation="Horizontal" 
				HorizontalAlignment="Left"
				VerticalAlignment="Stretch"
				Margin="-173,48,0,0" 
				Width="220" Background="#FF171717">

                <!-- SLIDE PANEL GRID -->

                <Grid Width="220" HorizontalAlignment="Left" >

                    <!-- BIG BUTTON MAP -->

                    <RadioButton x:Name="btnMap" Foreground="White" 
                		VerticalAlignment="Top" Height="48" HorizontalContentAlignment="Left" 
                		BorderBrush="{x:Null}" Content="Map"
                		TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" Width="220" HorizontalAlignment="Left" >
                        <RadioButton.Style>
                            <Style TargetType="{x:Type RadioButton}">
                                <Setter Property="Background" Value="#17171717"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=btnMap1}" Value="True"/>
                                            <Condition Binding="{Binding IsChecked, ElementName=btnMap}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                    </MultiDataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsChecked" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                    </MultiTrigger>

                                    <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap1}" Value="true">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#FF8000"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <!-- BIG BUTTON PHOTOS -->

                    <RadioButton x:Name="btnPhotos" Foreground="White" HorizontalContentAlignment="Left"
                        BorderBrush="{x:Null}" Content="Photos" TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" 
                                 Width="220" Margin="0,48,0,0" Height="48" VerticalAlignment="Top" HorizontalAlignment="Left" >
                        <RadioButton.Style>
                            <Style TargetType="{x:Type RadioButton}">
                                <Setter Property="Background" Value="#17171717"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=btnPhotos1}" Value="True"/>
                                            <Condition Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL PHOTOS BUTTON -->
                                    </MultiDataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsChecked" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL PHOTOS BUTTON -->
                                    </MultiTrigger>

                                    <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos1}" Value="true">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#FF8000"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <!-- BIG BUTTON FOLDERS -->


                    <RadioButton x:Name="btnFolders" Foreground="White" 
                    	VerticalAlignment="Top" Height="48" HorizontalContentAlignment="Left" 
                    	BorderBrush="{x:Null}" Content="Folders"
                    	TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" Width="220" Margin="0,96,0,0" HorizontalAlignment="Left" >
                        <RadioButton.Style>
                            <Style TargetType="{x:Type RadioButton}">
                                <Setter Property="Background" Value="#17171717"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=btnFolders1}" Value="True"/>
                                            <Condition Binding="{Binding IsChecked, ElementName=btnFolders}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                    </MultiDataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsChecked" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                    </MultiTrigger>

                                    <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders1}" Value="true">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#FF8000"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <!-- BIG BUTTON SETTINGS -->

                    <RadioButton x:Name="btnOptions" Foreground="White" 
                    	VerticalAlignment="Bottom" Height="48" HorizontalContentAlignment="Left" 
                    	BorderBrush="{x:Null}" Content="Settings"
                    	TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" Width="220" >
                        <RadioButton.Style>
                            <Style TargetType="{x:Type RadioButton}">
                                <Setter Property="Background" Value="#17171717"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=btnOptions1}" Value="True"/>
                                            <Condition Binding="{Binding IsChecked, ElementName=btnOptions}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                    </MultiDataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsChecked" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="#2E2E2E" />
                                        <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                    </MultiTrigger>

                                    <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions1}" Value="true">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#FF8000"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                </Grid>
            </StackPanel>


            <!-- SLIDE PANNEL SHOW/HIDE BUTTONS -->
            <Button x:Name="btnLeftMenuShow" Content="Show" 
				HorizontalAlignment="Left" 
				Click="btnLeftMenuShow_Click" VerticalAlignment="Top" 
				Height="48" Width="47" BorderBrush="#FF171717">
                <Button.Background>
                    <ImageBrush ImageSource="Styles/ico_menu.png"/>
                </Button.Background>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="btnLeftMenuHide" Content="Hide" 
				HorizontalAlignment="Left" 
				Click="btnLeftMenuHide_Click" VerticalAlignment="Top" 
				Height="48" Width="47" BorderBrush="#FF171717" Visibility="Hidden">
                <Button.Background>
                    <ImageBrush ImageSource="Styles/ico_menu.png"/>
                </Button.Background>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel Name="StackLabel" HorizontalAlignment="Left" Height="48" VerticalAlignment="Top" Width="117" Margin="48,0,0,0">
                <Grid Height="47">
                    <Label x:Name="label" Foreground="White" Content="Map" Margin="10,5.75,26,4.333" FontSize="18"/>
                </Grid>
            </StackPanel>
            <Grid x:Name="SmallBtnMapGrid" Panel.ZIndex="1" HorizontalAlignment="Left" Height="48" Margin="0,48,0,0" VerticalAlignment="Top" Width="48">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FF171717"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap}" Value="True">
                                <Setter Property="Background" Value="#FF8000" />
                                <Setter Property="IsEnabled" Value="True"/>
                                <!-- SELECTED IF CHECKED BIG OPTIONS BUTTON -->

                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnMap}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnMap}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER BIG OPTIONS BUTTON -->

                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnMap1}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnMap}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->

                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap}" Value="true">
                                <Setter Property="Background" Value="#FF8000"/>
                            </DataTrigger>

                        </Style.Triggers>

                    </Style>
                </Grid.Style>
                <RadioButton x:Name="btnMap1" Content="Button" Panel.ZIndex="55" IsChecked="True" MouseEnter="btnLeftMenuShow_Click">
                    <RadioButton.Background>
                        <ImageBrush ImageSource="Styles/ico_map.png"/>
                    </RadioButton.Background>

                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>
            </Grid>
            <Grid x:Name="PhotoGrid" Panel.ZIndex="2" HorizontalAlignment="Left" Height="48" Margin="0,96,0,0" VerticalAlignment="Top" Width="48">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FF171717"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="True">
                                <Setter Property="Background" Value="#FF8000" />
                                <Setter Property="IsEnabled" Value="True"/>
                                <!-- SELECTED IF CHECKED BIG OPTIONS BUTTON -->
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnPhotos}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER BIG OPTIONS BUTTON -->
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnPhotos1}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="true">
                                <Setter Property="Background" Value="#FF8000"/>
                            </DataTrigger>

                        </Style.Triggers>

                    </Style>
                </Grid.Style>
                <RadioButton x:Name="btnPhotos1" Content="Button"  MouseEnter="btnLeftMenuShow_Click"
            		Panel.ZIndex="3 ">
                    <RadioButton.Background>
                        <ImageBrush ImageSource="Styles/ico_photos.png"/>
                    </RadioButton.Background>

                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>
            </Grid>
            <Grid x:Name="FoldGrid" Panel.ZIndex="2" HorizontalAlignment="Left" Width="48" Height="48" VerticalAlignment="Top" Margin="0,144,0,0">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FF171717"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders}" Value="True">
                                <Setter Property="Background" Value="#FF8000" />
                                <!-- SELECTED IF CHECKED BIG FOLDER BUTTON -->
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnFolders}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnFolders}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER BIG FOLDER BUTTON -->
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnFolders1}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnFolders}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER SMALL FOLDER BUTTON -->
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders}" Value="true">
                                <Setter Property="Background" Value="#FF8000"/>
                            </DataTrigger>

                        </Style.Triggers>

                    </Style>
                </Grid.Style>
                <RadioButton x:Name="btnFolders1" Content="Button"   MouseEnter="btnLeftMenuShow_Click"
            		Panel.ZIndex="3 ">
                    <RadioButton.Background>
                        <ImageBrush ImageSource="Styles/ico_folders.png"/>
                    </RadioButton.Background>

                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>
            </Grid>
            <Grid x:Name="OptGrid" Panel.ZIndex="2" HorizontalAlignment="Left" Width="48" Height="48" VerticalAlignment="Bottom">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FF171717"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions}" Value="True">
                                <Setter Property="Background" Value="#FF8000" />
                                <Setter Property="IsEnabled" Value="True"/>
                                <!-- SELECTED IF CHECKED BIG OPTIONS BUTTON -->
                            </DataTrigger>



                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnOptions}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnOptions}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER BIG OPTIONS BUTTON -->
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=btnOptions1}" Value="True"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=btnOptions}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#2E2E2E" />
                                <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions}" Value="true">
                                <Setter Property="Background" Value="#FF8000"/>
                            </DataTrigger>

                        </Style.Triggers>

                    </Style>
                </Grid.Style>
                <RadioButton x:Name="btnOptions1"   MouseEnter="btnLeftMenuShow_Click"
            		Content="Button" Panel.ZIndex="3 ">
                    <RadioButton.Background>
                        <ImageBrush ImageSource="Styles/ico_options.png"/>
                    </RadioButton.Background>
                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>
            </Grid>
            <ComboBox x:Name="MapComboBox"
            	Panel.ZIndex="1" 
            	Foreground="#A2A2A2" HorizontalAlignment="Right"
            	Focusable="False" Style="{DynamicResource ComboBoxFlatStyle}" 
            	VerticalAlignment="Top" Width="130" Height="48" Margin="0,0,2,0"
    		 SelectedItem="{Binding MapProvider, ElementName=MainMap}"
    		 >

                <ComboBoxItem/>
                <ComboBoxItem/>
                <ComboBoxItem/>
                <ComboBoxItem/>
            </ComboBox>

        </Grid>
        <Grid x:Name="PhotoesGrid"/>
        <Grid x:Name="FoldersGrid"/>

        <Grid x:Name="MarkerGrid" >

            <Button x:Name="btnInfoShow" Content="Show" Click="btnInfoShow_Click" 
                    HorizontalAlignment="Right" Height="36.797" Margin="0,6.203,5,0" VerticalAlignment="Top" Width="37.333"/>

            <Button x:Name="btnInfoHide" Content="Hide" Click="btnInfoHide_Click" Visibility="Hidden"
                    HorizontalAlignment="Right" Height="36.797" Margin="0,6.203,5,0" VerticalAlignment="Top" Width="37.333"/>
            <StackPanel 
        		Opacity="0.5"
        		Panel.ZIndex="1"
        		MouseEnter="btnInfoShow_Click"
        		x:Name="PhotoInfoPanel" 
        		Orientation="Horizontal" 
        		HorizontalAlignment="Left"
        		VerticalAlignment="Stretch"
        		Margin="-260.5,48,0,0" 
        		Width="260" Background="#FF171717">

                <!-- SLIDE PANEL GRID -->

                <Grid Width="220" HorizontalAlignment="Left" />
            </StackPanel>
            <Grid HorizontalAlignment="Left" Height="31.297" VerticalAlignment="Top" Width="33.5" Margin="10,10,0,0">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FF171717"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnBackToMap}" Value="True">
                                <Setter Property="Background" Value="#2E2E2E" />
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </Grid.Style>




                <Button x:Name="btnBackToMap" 
                        Content="Button" RenderTransformOrigin="0.646,0.463" Margin="-6,0,-8.5,0.297" Click="btnBackToMap_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="Styles/ico_back.png"/>
                    </Button.Background>

                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

            </Grid>
            <StackPanel x:Name="MapLabel" HorizontalAlignment="Left" Height="48" VerticalAlignment="Top" Width="117" Margin="48,0,0,0">
                <Grid Height="47">
                    <Label x:Name="label1" Foreground="White" Content="Map" Margin="0,6.667,36,0" FontSize="18"/>
                </Grid>
            </StackPanel>
            <Rectangle Fill="#FFCD6060" Margin="0,48,0,0"/>
        </Grid>


        <!-- COMBO BOX FOR MAPS -->

        <!-- MAP SMALL BUTTON -->

        <!-- SMALL MAP GRID -->

        <!-- PHOTOS BUTTON -->

        <!-- PHOTOS GRID -->


        <!-- FOLDERS BUTTON -->

        <!-- FOLDERS GRID -->

        <!-- OPTIONS -->

        <!-- MAIN WINDOW GRID -->
    </Grid>




</Window>
    
    