<Window
    Name="myWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:WindowsPresentation="clr-namespace:Demo.WindowsPresentation"
    xmlns:src="clr-namespace:Lws.TrackMyPictures"  
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="Lws.TrackMyPictures.MainWindow"

    Title="VS.Net Style Demo"
    SizeChanged="myWindow_SizeChanged"
    Height="600"
    Width="800"
    MinHeight="160"
    MinWidth="260"
    AllowDrop="True"
    Icon="/mainicon.ico"
    Background="#FF1717"
    >

    <Window.Resources>

        <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Visibility" Value="Hidden" />
            </Style>

   

        <Storyboard x:Key="sbShowLeftMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="-172,48,0,0" To="0,48,0,0" DecelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="sbHideLeftMenu">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,48,0,0" To="-172,48,0,0" AccelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="LblRight" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="220,0,0,0" To="48,0,0,0" AccelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="LblLeft" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="48,0,0,0" To="220,0,0,0" DecelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="sbShowInfo" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin"  From="-310,48,0,0" To="0,48,0,0" DecelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

        <Storyboard x:Key="sbHideInfo">
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,48,0,0" To="-310,48,0,0" AccelerationRatio="1" Duration="0:0:0.35" />
        </Storyboard>

    </Window.Resources>

    <Window.Style>
        <StaticResource ResourceKey="TMPStyle"/>
    </Window.Style>



    <Grid x:Name="WindowGrid" VerticalAlignment="Stretch"  
          HorizontalAlignment="Stretch" >

        <Rectangle x:Name="upRect" Fill="#FF171717" Height="48" VerticalAlignment="Top" />
        <Rectangle x:Name="panelRect" Fill="#FF171717" HorizontalAlignment="Left" Panel.ZIndex="1"
        	Margin="0,48,0,0" Width="48" MouseEnter="btnLeftMenuShow_Click"    />
        <StackPanel Name="StackLabel" HorizontalAlignment="Left" Height="48" VerticalAlignment="Top" Panel.ZIndex="1" Width="175" Margin="48,0,0,0">
            <Grid Height="47">
                <Label x:Name="label" Foreground="White" Content="Map" Margin="10,6,120,4" FontSize="18"/>
                <Grid x:Name="openFileGrid" Height="31" VerticalAlignment="Top" Opacity="0.8" HorizontalAlignment="Left" Margin="70,10,0,0" Width="33">

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnOpenFile}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnOpenFile" Content="Button" Click="btnOpenFile_Click" >
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/ico_open_file.png"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </StackPanel>
        <Button x:Name="btnLeftMenuShow" Content="Show" Panel.ZIndex="1"
        	HorizontalAlignment="Left" 
        	Click="btnLeftMenuShow_Click" VerticalAlignment="Top" 
        	Height="48" Width="47" BorderBrush="#FF171717">
            <Button.Background>
                <ImageBrush ImageSource="Styles/ico_menu.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="btnLeftMenuHide" Content="Hide" Panel.ZIndex="1"
        	HorizontalAlignment="Left" 
        	Click="btnLeftMenuHide_Click" VerticalAlignment="Top" 
        	Height="48" Width="47" BorderBrush="#FF171717" Visibility="Hidden">
            <Button.Background>
                <ImageBrush ImageSource="Styles/ico_menu.png"/>
            </Button.Background>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <RadioButton x:Name="btnMap1" Content="Button" Panel.ZIndex="3 " IsChecked="True" MouseEnter="btnLeftMenuShow_Click"
        	HorizontalAlignment="Left" Width="48" Margin="0,48,0,0" Height="48" VerticalAlignment="Top">
            <RadioButton.Background>
                <ImageBrush ImageSource="Styles/ico_map.png"/>
            </RadioButton.Background>
            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap}" Value="true">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>
        <Grid x:Name="btnMap1Grd" Panel.ZIndex="2" HorizontalAlignment="Left" Height="48" Margin="0,48,0,0" VerticalAlignment="Top" Width="48">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="#FF171717"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap}" Value="True">
                            <Setter Property="Background" Value="#FF8000" />
                            <Setter Property="IsEnabled" Value="True"/>
                            <!-- SELECTED IF CHECKED BIG OPTIONS BUTTON -->
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnMap}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnMap}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER BIG OPTIONS BUTTON -->
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnMap1}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnMap}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap}" Value="true">
                            <Setter Property="Background" Value="#FF8000"/>
                        </DataTrigger>

                    </Style.Triggers>

                </Style>
            </Grid.Style>
        </Grid>
        <RadioButton x:Name="btnPhotos1" Content="Button"  MouseEnter="btnLeftMenuShow_Click"
        	Panel.ZIndex="3 " HorizontalAlignment="Left" Height="48" VerticalAlignment="Top" Width="48" Margin="0,96,0,0">
            <RadioButton.Background>
                <ImageBrush ImageSource="Styles/ico_photos.png"/>
            </RadioButton.Background>

            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="true">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>
        <Grid x:Name="btnPhotos1Grd" Panel.ZIndex="2" HorizontalAlignment="Left" Height="48" Margin="0,96,0,0" VerticalAlignment="Top" Width="48">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="#FF171717"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="True">
                            <Setter Property="Background" Value="#FF8000" />
                            <Setter Property="IsEnabled" Value="True"/>
                            <!-- SELECTED IF CHECKED BIG OPTIONS BUTTON -->
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnPhotos}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER BIG OPTIONS BUTTON -->
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnPhotos1}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="true">
                            <Setter Property="Background" Value="#FF8000"/>
                        </DataTrigger>

                    </Style.Triggers>

                </Style>
            </Grid.Style>
        </Grid>
        <RadioButton x:Name="btnFolders1" Content="Button"   MouseEnter="btnLeftMenuShow_Click" Visibility="Hidden"
        	Panel.ZIndex="3 " HorizontalAlignment="Left" Height="48" VerticalAlignment="Top" Width="48" Margin="0,144,0,0">
            <RadioButton.Background>
                <ImageBrush ImageSource="Styles/ico_folders.png"/>
            </RadioButton.Background>

            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders}" Value="true">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>
        <Grid x:Name="btnFolders1Grd" Panel.ZIndex="2" HorizontalAlignment="Left" Width="48" Height="48" VerticalAlignment="Top" Margin="0,144,0,0">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="#FF171717"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders}" Value="True">
                            <Setter Property="Background" Value="#FF8000" />
                            <!-- SELECTED IF CHECKED BIG FOLDER BUTTON -->
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnFolders}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnFolders}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER BIG FOLDER BUTTON -->
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnFolders1}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnFolders}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER SMALL FOLDER BUTTON -->
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders}" Value="true">
                            <Setter Property="Background" Value="#FF8000"/>
                        </DataTrigger>

                    </Style.Triggers>

                </Style>
            </Grid.Style>
        </Grid>
        <RadioButton x:Name="btnOptions1"   MouseEnter="btnLeftMenuShow_Click" Visibility="Hidden"
        	Content="Button" Panel.ZIndex="3" HorizontalAlignment="Left" Width="48" Height="48" VerticalAlignment="Bottom">
            <RadioButton.Background>
                <ImageBrush ImageSource="Styles/ico_options.png"/>
            </RadioButton.Background>
            <RadioButton.Style>
                <Style TargetType="{x:Type RadioButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions}" Value="true">
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </RadioButton.Style>
        </RadioButton>
        <Grid x:Name="btnOptions1Grd" Panel.ZIndex="2" HorizontalAlignment="Left" Width="48" Height="48" VerticalAlignment="Bottom">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="#FF171717"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions}" Value="True">
                            <Setter Property="Background" Value="#FF8000" />
                            <!-- SELECTED IF CHECKED BIG FOLDER BUTTON -->
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnOptions}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnOptions}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER BIG FOLDER BUTTON -->
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=btnOptions1}" Value="True"/>
                                <Condition Binding="{Binding IsChecked, ElementName=btnOptions}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="#2E2E2E" />
                            <!-- SELECTED IF MOUSE OVER SMALL FOLDER BUTTON -->
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions}" Value="true">
                            <Setter Property="Background" Value="#FF8000"/>
                        </DataTrigger>

                    </Style.Triggers>

                </Style>
            </Grid.Style>

        </Grid>
        <StackPanel 
        	x:Name="pnlLeftMenu" Panel.ZIndex="1"
        	Orientation="Horizontal" 
        	HorizontalAlignment="Left"
        	VerticalAlignment="Stretch"
        	Margin="-173,48,0,0" 
        	Width="220" Background="#FF171717">

            <!-- SLIDE PANEL GRID -->

            <Grid Width="220" HorizontalAlignment="Left" >

                <!-- BIG BUTTON MAP -->

                <RadioButton x:Name="btnMap" Foreground="White" 
        			VerticalAlignment="Top" Height="48" HorizontalContentAlignment="Left" 
        			BorderBrush="{x:Null}" Content="Map"
        			TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" Width="220" HorizontalAlignment="Left" Checked="btnMap_Checked" >
                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Background" Value="#17171717"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=btnMap1}" Value="True"/>
                                        <Condition Binding="{Binding IsChecked, ElementName=btnMap}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                </MultiDataTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                </MultiTrigger>

                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap1}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#FF8000"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>

                <!-- BIG BUTTON PHOTOS -->

                <RadioButton x:Name="btnPhotos" Foreground="White" HorizontalContentAlignment="Left"
        			BorderBrush="{x:Null}" Content="Photos" TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" 
        			Width="220" Margin="0,48,0,0" Height="48" VerticalAlignment="Top" HorizontalAlignment="Left" Checked="btnPhotos_Checked" >
                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Background" Value="#17171717"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=btnPhotos1}" Value="True"/>
                                        <Condition Binding="{Binding IsChecked, ElementName=btnPhotos}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL PHOTOS BUTTON -->
                                </MultiDataTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL PHOTOS BUTTON -->
                                </MultiTrigger>

                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos1}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#FF8000"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>

                <!-- BIG BUTTON FOLDERS -->


                <RadioButton x:Name="btnFolders" Foreground="White" Visibility="Hidden"
        			VerticalAlignment="Top" Height="48" HorizontalContentAlignment="Left" 
        			BorderBrush="{x:Null}" Content="Folders"
        			TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" Width="220" Margin="0,96,0,0" HorizontalAlignment="Left" Checked="btnFolders_Checked" >
                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Background" Value="#17171717"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=btnFolders1}" Value="True"/>
                                        <Condition Binding="{Binding IsChecked, ElementName=btnFolders}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                </MultiDataTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                </MultiTrigger>

                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnFolders1}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#FF8000"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>

                <!-- BIG BUTTON SETTINGS -->

                <RadioButton x:Name="btnOptions" Foreground="White"  Visibility="Hidden"
        			VerticalAlignment="Bottom" Height="48" HorizontalContentAlignment="Left" 
        			BorderBrush="{x:Null}" Content="Settings"
        			TextBlock.FontFamily="Segoi UI" TextBlock.FontSize="18" Width="220" Checked="btnOptions_Checked" >
                    <RadioButton.Style>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Background" Value="#17171717"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="56,15,62.307,10" Width="Auto"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=btnOptions1}" Value="True"/>
                                        <Condition Binding="{Binding IsChecked, ElementName=btnOptions}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                </MultiDataTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#2E2E2E" />
                                    <!-- SELECTED IF MOUSE OVER SMALL OPTIONS BUTTON -->
                                </MultiTrigger>

                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnOptions1}" Value="true">
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#FF8000"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </RadioButton.Style>
                </RadioButton>

            </Grid>
        </StackPanel>

        <Grid Background="Transparent" Name="MapGrid" Visibility="Visible"  >

            <Grid HorizontalAlignment="Right" Height="80" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="40" Panel.ZIndex="10">
                <Grid Height="40" VerticalAlignment="Top" Opacity="0.8">

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>

                                <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap1}" Value="false">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>

                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnZoomOut" Content="Button" Width="40" HorizontalAlignment="Right" Click="btnZoomOut_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/zoom_out.png"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid Height="40" VerticalAlignment="Bottom" Opacity="0.8">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnZoomIn}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>
                    <Button x:Name="btnZoomIn" Content="Button"
                		Width="40" Height="40" VerticalAlignment="Bottom" HorizontalAlignment="Left" Click="btnZoomIn_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/zoom_in.png"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>

            <!-- MAP CONTROL -->
            <WindowsPresentation:Map x:Name="MainMap" 
                                 Margin="48,48,0,0" HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     MouseEnter="MainMap_MouseEnter"
                                     DragDrop.Drop="myWindow_Drop"
                                     />


            <!-- SLIDE PANNEL SHOW/HIDE BUTTONS -->


            <!-- SMALL MAP GRID -->

            <!-- PHOTOS BUTTON -->

            <!-- PHOTOS GRID -->


            <!-- FOLDERS BUTTON -->

            <!-- FOLDERS GRID -->

            <!-- OPTIONS -->

            <!-- OPTIONS WINDOW GRID -->

            <ComboBox x:Name="MapComboBox"
            	Panel.ZIndex="1" 
            	Foreground="#A2A2A2" HorizontalAlignment="Right"
            	Focusable="False" Style="{DynamicResource ComboBoxFlatStyle}" 
            	VerticalAlignment="Top" Width="130" Height="48" Margin="0,0,2,0"
    		 SelectedItem="{Binding MapProvider, ElementName=MainMap}" >

                <ComboBoxItem/>
                <ComboBoxItem/>
                <ComboBoxItem/>
                <ComboBoxItem/>
            </ComboBox>

        </Grid>
        <Grid x:Name="PhotosGrid" Margin="48,48,0,0" Visibility="Hidden" Background="Black" MouseEnter="MainMap_MouseEnter">
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="Black"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnPhotos1}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnMap1}" Value="true">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>

                </Style>

            </Grid.Style>

            <ListView x:Name="ListView1"    SelectionMode="Extended"   SelectedIndex="0" HorizontalContentAlignment="Stretch"
                      IsSynchronizedWithCurrentItem="True"  ItemsSource="{Binding ListViewItemsCollections}"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                       MouseDoubleClick="ListView1_MouseDoubleClick" Background="Black" BorderThickness="0" Margin="40,20,0,0">

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="Transparent" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border BorderBrush="Transparent" BorderThickness="2" Background="{TemplateBinding Background}">
                                        <GridViewRowPresenter HorizontalAlignment="Left" 
                                                              VerticalAlignment="Center" 
                                                              Width="120" Content="{TemplateBinding Content}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>



                <ListView.View>

                    <GridView ColumnHeaderContainerStyle="{StaticResource myHeaderStyle}"  AllowsColumnReorder="True" >
                        <GridViewColumn x:Name="GridViewColumnName" Header="Image"  Width="120" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Border>
                                        <WrapPanel Orientation="Vertical">
                                            <Image x:Name="Image_GridViewColumnName" Source="{Binding GridImageBrush}" Margin="-6"/>
                                        </WrapPanel>
                                    </Border>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontSize="30" Text="{Binding Name}" Foreground="Gray"/>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>


                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel  
                               Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListView>

        </Grid>
        <Grid x:Name="FoldersGrid" Background="Violet" Visibility="Hidden"/>
        <Grid x:Name="OptionsGrid" Background="DarkTurquoise" Visibility="Hidden"/>
        <Grid x:Name="MarkerGrid"  Visibility="Hidden">
            <StackPanel 
        		
        		Panel.ZIndex="1"
        		x:Name="PhotoInfoPanel" 
        		Orientation="Horizontal" 
        		HorizontalAlignment="Left"
        		VerticalAlignment="Stretch"
        		Margin="-310,48,0,0" 
        		Width="310" >
                <StackPanel.Background>
                    <SolidColorBrush Color="#FF171717" Opacity="0.7"/>
                </StackPanel.Background>

                <!-- SLIDE PANEL GRID -->

                <Grid Width="310" HorizontalAlignment="Left" >

                    <Grid HorizontalAlignment="Left" Height="25" Margin="56,184,0,0" VerticalAlignment="Top" Width="105">


                        <Button x:Name="button10" Content="Show on map" Foreground="Orange" 
                                VerticalAlignment="Top" TextBlock.FontSize="16"
                                Click="button10_Click" >

                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </Grid>


                    <Label x:Name="lblRes" Foreground="White" FontSize="18" Content="Label" HorizontalAlignment="Left" Height="36" Margin="56,240,0,0" VerticalAlignment="Top" Width="213"/>
                    <Label x:Name="lblPhotoExtension" Foreground="Gray" FontSize="16" Content="Label" HorizontalAlignment="Left" Height="31" Margin="56,276,0,0" VerticalAlignment="Top" Width="140"/>
                    <Label x:Name="lblCameraInfo" Foreground="White" FontSize="16" Content="Label" HorizontalAlignment="Left" Height="28" Margin="56,324,0,0" VerticalAlignment="Top" Width="105"/>
                    <Label x:Name="lblCameraAddInfo" Foreground="Gray" FontSize="13" Content="Label" HorizontalAlignment="Left" Height="25" Margin="56,352,0,0" VerticalAlignment="Top" Width="105"/>
                    <TextBox x:Name="lblDateTime" Background="Transparent" IsReadOnly="True" 
                             HorizontalAlignment="Left" Height="73" Margin="56,38,0,0" TextWrapping="WrapWithOverflow" 
                             Text="TextBox" VerticalAlignment="Top" Width="213" FontSize="25" Foreground="White" BorderThickness="0"/>
                    <TextBox x:Name="lblPhotoPlace" Background="Transparent" IsReadOnly="True" ScrollViewer.CanContentScroll="False"
                             HorizontalAlignment="Left" Height="35" Margin="56,144,0,0" TextWrapping="WrapWithOverflow" 
                             Text="TextBox" VerticalAlignment="Top" Width="226" FontSize="22" Foreground="White" BorderThickness="0"/>
                    <Label x:Name="lblFileAdress" Foreground="Gray" FontSize="16" Content="Label" HorizontalAlignment="Left" Height="33" Margin="24,447,0,0" VerticalAlignment="Top" Width="258"/>
                    <Grid HorizontalAlignment="Left" Height="25" Margin="24,480,0,0" VerticalAlignment="Top" Width="105">


                        <Button x:Name="btnOpenFolder" Content="Open folder" Foreground="Orange" 
                    		VerticalAlignment="Top" TextBlock.FontSize="16"
                    		Click="btnOpenFolder_Click" >

                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </Grid>
                </Grid>
            </StackPanel>
            <Grid HorizontalAlignment="Left" Height="31.297" VerticalAlignment="Top" Width="33.5" Margin="10,10,0,0">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FF171717"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnBackToMap}" Value="True">
                                <Setter Property="Background" Value="#2E2E2E" />
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </Grid.Style>
                <Button x:Name="btnBackToMap" 
                        Content="" RenderTransformOrigin="0.646,0.463" Margin="-7.667,-9,-7.833,-7.369" Click="btnBackToMap_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="Styles/ico_back.png"/>
                    </Button.Background>

                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

            </Grid>

            <Grid x:Name="GridBtnInfoHideShow" 
                  HorizontalAlignment="Right" Height="35" Margin="0,8,7.333,0" VerticalAlignment="Top" Width="35">

                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="#FF171717"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnInfoHide}" Value="True">
                                <Setter Property="Background" Value="#2E2E2E" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnInfoShow}" Value="True">
                                <Setter Property="Background" Value="#2E2E2E" />
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </Grid.Style>

                <Button x:Name="btnInfoShow" Content="Show" Click="btnInfoShow_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="Styles/ico_info.png"/>
                    </Button.Background>

                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="btnInfoHide" Content="Hide" Click="btnInfoHide_Click" Visibility="Hidden">
                    <Button.Background>
                        <ImageBrush ImageSource="Styles/ico_info.png"/>
                    </Button.Background>

                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <StackPanel x:Name="MapLabel" HorizontalAlignment="Left" Height="48" VerticalAlignment="Top" Width="117" Margin="48,0,0,0">
                <Grid Height="47" Margin="0,0,67,0" HorizontalAlignment="Center">
                    <Label x:Name="label1" Foreground="White" Content="Map" Margin="0,7,0,0" FontSize="18"/>
                </Grid>
            </StackPanel>
            <ScrollViewer Name="MyScrollViewer" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                          CanContentScroll="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF171717"
                          Margin="0,48,0,0"  PreviewMouseWheel="MyScrollViewer_MouseWheel">
                <Rectangle x:Name="ImgRect" MouseDown="ImgRect_MouseDown" MouseMove="ImgRect_MouseMove" MouseUp="ImgRect_MouseUp"
                           HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#FF171717" PreviewMouseWheel="MyScrollViewer_MouseWheel" />
            </ScrollViewer>
            <Grid Height="31" Margin="218,6,231,0" VerticalAlignment="Top">

                <Label x:Name="lblFileName" Foreground="White" FontSize="18" Margin="10,0,2,0" 
            		Height="31" Width="129" VerticalAlignment="Top" HorizontalAlignment="Center"/>

                <Grid HorizontalAlignment="Right" Width="33">
                    <Grid.Background>
                        <ImageBrush/>
                    </Grid.Background>
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnBackToMap}" Value="True">
                                    <Setter Property="Background" Value="#2E2E2E" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>
                    <Button x:Name="btnToRight" Content="Button" Click="btnToRight_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_right.png"/>
                        </Button.Background>

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid HorizontalAlignment="Left" Width="32">
                    <Grid.Background>
                        <ImageBrush/>
                    </Grid.Background>
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnBackToMap}" Value="True">
                                    <Setter Property="Background" Value="#2E2E2E" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>
                    <Button x:Name="btnToLeft" Content="Button" Click="btnToLeft_Click">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_left.png"/>
                        </Button.Background>

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>

            <Grid Height="35
" Margin="0,0,29,27" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="405">
                <Grid x:Name="grdMxScr" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" d:LayoutOverrides="HorizontalAlignment"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnMaximize}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnMaximize" Content="Button" Click="btnFullScr_Click" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_maximize.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grdNmScr" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="45,0,0,0" d:LayoutOverrides="HorizontalAlignment"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnNormalizeScreen}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnNormalizeScreen" Content="Button" Click="btnMinScr_Click" d:LayoutOverrides="LeftMargin, RightMargin" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_zoom_2.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grd1to1" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="90,0,0,0" d:LayoutOverrides="HorizontalAlignment"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnOneToOne}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnOneToOne" Content="Button" Click="btnOneToOne_Click" d:LayoutOverrides="LeftMargin, RightMargin" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_zoom_1.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grdOut" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="135,0,0,0" d:LayoutOverrides="HorizontalAlignment"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnScaleOut}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnScaleOut" Content="Button" Click="btnScaleOut_Click" d:LayoutOverrides="LeftMargin, RightMargin" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_zoom_out.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grdIn" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="180,0,0,0"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnScaleIn}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnScaleIn" Content="Button" Click="btnScaleIn_Click" d:LayoutOverrides="LeftMargin, RightMargin" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_zoom_in.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grdVerAli" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="225,0,0,0"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnVerticalAlign}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnVerticalAlign" Content="Button" Click="button6_Click" d:LayoutOverrides="LeftMargin, RightMargin" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_ali_v.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grdHorAli" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="270,0,0,0"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnHorisontalAlign}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnHorisontalAlign" Content="Button" Click="button7_Click" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_ali_h.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grdRotLeft" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="315,0,0,0"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnRotateLeft}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>


                    <Button x:Name="btnRotateLeft" Content="Button" Click="btnRotateLeft_Click" d:LayoutOverrides="LeftMargin, RightMargin" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_rotate_left.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <Grid x:Name="grdRotRight" Opacity="0.8" HorizontalAlignment="Left" Width="45" ShowGridLines="False" Margin="360,0,-5.668,0"  >

                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Background" Value="#FF171717"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=btnRotateRight}" Value="True">
                                    <Setter Property="Background" Value="#FF5F5F5F" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Grid.Style>
                    <Button x:Name="btnRotateRight" Content="Button" Click="btnRotateRight_Click" d:LayoutOverrides="LeftMargin, RightMargin" BorderThickness="0">
                        <Button.Background>
                            <ImageBrush ImageSource="Styles/p_rotate_right.png" Stretch="Uniform"/>
                        </Button.Background>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </Grid>
    </Grid>



</Window>
    
    